[gd_scene load_steps=12 format=3 uid="uid://cmdh8rpdo8fb2"]

[ext_resource type="Texture2D" uid="uid://82opar247kat" path="res://Assets/Tiles/platformertiles.png" id="1_lx4yj"]
[ext_resource type="Texture2D" uid="uid://cildswtcj7qrc" path="res://Assets/slime-sprite.png" id="3_5k8jm"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_83pvq"]
texture = ExtResource("1_lx4yj")
texture_region_size = Vector2i(32, 32)
3:2/0 = 0
1:0/0 = 0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:1/0 = 0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:1/0 = 0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:2/0 = 0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:0/0 = 0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:0/0 = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:1/0 = 0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:2/0 = 0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:2/0 = 0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:0/0 = 0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:1/0 = 0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:2/0 = 0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
5:0/0 = 0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:0/0 = 0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:0/0 = 0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:2/0 = 0
6:1/0 = 0
5:1/0 = 0
5:2/0 = 0
6:2/0 = 0
7:1/0 = 0
3:1/0 = 0
3:0/0 = 0

[sub_resource type="TileSet" id="TileSet_jgi20"]
tile_size = Vector2i(32, 32)
physics_layer_0/collision_layer = 1
sources/1 = SubResource("TileSetAtlasSource_83pvq")

[sub_resource type="GDScript" id="GDScript_381hh"]
resource_name = "Player"
script/source = "extends CharacterBody2D

# Konstanten für die Bewegung und Sprünge
const SPEED = 200.0
const GRAVITY = 1200.0  # Erhöhte Schwerkraft für schnelleres Fallen
const JUMP_VELOCITY = -400.0  # Weniger starkes normales Springen
const WALL_JUMP_VELOCITY_X = -500.0  # Weniger starkes seitliches Abspringen von der Wand
const WALL_JUMP_VELOCITY_Y = -500.0  # Weniger starkes vertikales Abspringen
const WALL_SLIDE_SPEED = 1000.0  # Minimal langsamer als das normale Fallen

# Variablen für die Laufrichtung und den Wall-Jump-Status
var direction := Vector2.ZERO
var is_wall_sliding := false
var can_wall_jump := true
var last_wall_normal := Vector2.ZERO

func _physics_process(delta: float) -> void:
	# Gravitation anwenden, wenn nicht auf dem Boden
	if not is_on_floor():
		velocity.y += GRAVITY * delta

	# Überprüfen, ob der Charakter an einer Wand ist
	if is_on_wall() and not is_on_floor() and velocity.y > 0:
		is_wall_sliding = true
		# Geschwindigkeit beim Rutschen an der Wand minimal begrenzen
		if velocity.y > WALL_SLIDE_SPEED:
			velocity.y = WALL_SLIDE_SPEED
		# Überprüfen, ob der Spieler sich auf einer neuen Wand befindet
		var current_wall_normal = get_wall_normal()
		if current_wall_normal != last_wall_normal:
			can_wall_jump = true  # Wall Jump zurücksetzen, wenn die Wand anders ist
			last_wall_normal = current_wall_normal
	else:
		is_wall_sliding = false
		if is_on_floor():
			can_wall_jump = true  # Wall Jump zurücksetzen, wenn auf dem Boden

	# Sprung ausführen
	if Input.is_action_just_pressed(\"up\"):
		if is_on_floor():
			velocity.y = JUMP_VELOCITY
		elif is_wall_sliding and can_wall_jump:
			# Wall Jump ausführen
			velocity.y = WALL_JUMP_VELOCITY_Y
			velocity.x = direction.x * -WALL_JUMP_VELOCITY_X
			can_wall_jump = false  # Wall Jump deaktivieren, bis zurückgesetzt

	# Horizontale Bewegung basierend auf der Eingabe
	direction.x = Input.get_axis(\"left\", \"right\")
	if direction.x != 0:
		velocity.x = direction.x * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	# Bewegen und gleiten lassen
	move_and_slide()

	# Animation einstellen
	set_animation()

# Funktion zum Einstellen der Animation
func set_animation():
	if direction.x < 0:
		$PlayerSprite.flip_h = true
		$AnimationPlayer.play(\"walk\")
	elif direction.x > 0:
		$PlayerSprite.flip_h = false
		$AnimationPlayer.play(\"walk\")

	if direction.x == 0:
		$AnimationPlayer.play(\"idle\")

	if is_in_air():
		$AnimationPlayer.play(\"jump\")

func is_in_air():
	return not is_on_floor()
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_uwm2o"]
size = Vector2(255, 386.667)

[sub_resource type="Animation" id="Animation_chcy3"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_uuvvo"]
resource_name = "idle"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 1]
}

[sub_resource type="Animation" id="Animation_smtgq"]
resource_name = "jump"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [5]
}

[sub_resource type="Animation" id="Animation_wvi70"]
resource_name = "walk"
length = 0.5
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0, 4]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_1fd5i"]
_data = {
"RESET": SubResource("Animation_chcy3"),
"idle": SubResource("Animation_uuvvo"),
"jump": SubResource("Animation_smtgq"),
"walk": SubResource("Animation_wvi70")
}

[node name="Game" type="Node2D"]

[node name="Background" type="TileMap" parent="."]
tile_set = SubResource("TileSet_jgi20")
collision_animatable = true
format = 2
layer_0/tile_data = PackedInt32Array(2097152, 196609, 2, 2097153, 196609, 2, 2097154, 196609, 2, 2097155, 196609, 2, 2097156, 196609, 2, 2097157, 196609, 2, 2097158, 196609, 2, 2097159, 196609, 2, 2097160, 196609, 2, 2097161, 196609, 2, 2097162, 196609, 2, 2097163, 196609, 2, 2097164, 196609, 2, 2097165, 196609, 2, 2097166, 196609, 2, 2031630, 196609, 2, 2031631, 196609, 2, 2031632, 196609, 2, 2031633, 196609, 2, 2031634, 196609, 2, 2097167, 196609, 2, 2097168, 196609, 2, 2097169, 196609, 2, 2097170, 196609, 2, 2097171, 196609, 2, 2097172, 196609, 2, 1638427, 196609, 2, 2097173, 196609, 2, 2097174, 196609, 2, 2097175, 196609, 2, 2097176, 196609, 2, 2097177, 196609, 2, 2097178, 196609, 2, 2097179, 196609, 2, 2097180, 196609, 2, 2097181, 196609, 2, 2031645, 196609, 2, 1966109, 196609, 2, 1900573, 196609, 2, 1835037, 196609, 2, 1769501, 196609, 2, 1703965, 196609, 2, 1638429, 196609, 2, 1572893, 196609, 2, 1507357, 196609, 2, 1441821, 196609, 2, 1376285, 196609, 2, 1310749, 196609, 2, 1245213, 196609, 2, 1179677, 196609, 2, 1114141, 196609, 2, 1048605, 196609, 2, 1048604, 196609, 2, 1048603, 196609, 2, 1048602, 196609, 2, 1048601, 196609, 2, 1048600, 196609, 2, 1048599, 196609, 2, 1048598, 196609, 2, 1048597, 196609, 2, 1048596, 196609, 2, 1048595, 196609, 2, 1048594, 196609, 2, 1048593, 196609, 2, 1048592, 196609, 2, 1048591, 196609, 2, 1048590, 196609, 2, 1048589, 196609, 2, 1048588, 196609, 2, 1048587, 196609, 2, 1048586, 196609, 2, 1048585, 196609, 2, 1048584, 196609, 2, 1048583, 196609, 2, 1048582, 196609, 2, 1048581, 196609, 2, 1048580, 196609, 2, 1048579, 196609, 2, 1048578, 196609, 2, 1048577, 196609, 2, 1048576, 196609, 2, 1114112, 196609, 2, 1179648, 196609, 2, 1245184, 196609, 2, 1310720, 196609, 2, 1376256, 196609, 2, 1638400, 196609, 2, 1703936, 196609, 2, 1572864, 196609, 2, 1507328, 196609, 2, 1441792, 196609, 2, 1769472, 196609, 2, 1835008, 196609, 2, 1900544, 196609, 2, 1966080, 196609, 2, 2031616, 196609, 2, 2031617, 196609, 2, 2031618, 196609, 2, 2031619, 196609, 2, 2031620, 196609, 2, 2031621, 196609, 2, 2031622, 196609, 2, 2031623, 196609, 2, 2031624, 196609, 2, 2031625, 196609, 2, 2031626, 196609, 2, 2031627, 196609, 2, 2031628, 196609, 2, 2031629, 196609, 2, 2031635, 196609, 2, 2031636, 196609, 2, 2031637, 196609, 2, 2031638, 196609, 2, 2031639, 196609, 2, 2031640, 196609, 2, 2031641, 196609, 2, 2031642, 196609, 2, 2031643, 196609, 2, 2031644, 196609, 2, 1966108, 196609, 2, 1900572, 196609, 2, 1966107, 196609, 2, 1966106, 196609, 2, 1966105, 196609, 2, 1966104, 196609, 2, 1966103, 196609, 2, 1966102, 196609, 2, 1966101, 196609, 2, 1966100, 196609, 2, 1966099, 196609, 2, 1966098, 196609, 2, 1966097, 196609, 2, 1966096, 196609, 2, 1966095, 196609, 2, 1966094, 196609, 2, 1966093, 196609, 2, 1966092, 196609, 2, 1966091, 196609, 2, 1966090, 196609, 2, 1966089, 196609, 2, 1966088, 196609, 2, 1966087, 196609, 2, 1966086, 196609, 2, 1966085, 196609, 2, 1966084, 196609, 2, 1900547, 196609, 2, 1900546, 196609, 2, 1900545, 196609, 2, 1835010, 196609, 2, 1966082, 196609, 2, 1966081, 196609, 2, 1966083, 196609, 2, 1900548, 196609, 2, 1835011, 196609, 2, 1835009, 196609, 2, 1769473, 196609, 2, 1835012, 196609, 2, 1835013, 196609, 2, 1835014, 196609, 2, 1900549, 196609, 2, 1900550, 196609, 2, 1900551, 196609, 2, 1900552, 196609, 2, 1900553, 196609, 2, 1900554, 196609, 2, 1900555, 196609, 2, 1900556, 196609, 2, 1900557, 196609, 2, 1900558, 196609, 2, 1900559, 196609, 2, 1900560, 196609, 2, 1900561, 196609, 2, 1900562, 196609, 2, 1835027, 196609, 2, 1835028, 196609, 2, 1835029, 196609, 2, 1835030, 196609, 2, 1835031, 196609, 2, 1835032, 196609, 2, 1900568, 196609, 2, 1900569, 196609, 2, 1900570, 196609, 2, 1900571, 196609, 2, 1900567, 196609, 2, 1900566, 196609, 2, 1900565, 196609, 2, 1900564, 196609, 2, 1900563, 196609, 2, 1835033, 196609, 2, 1835034, 196609, 2, 1835035, 196609, 2, 1835036, 196609, 2, 1835026, 196609, 2, 1835025, 196609, 2, 1835024, 196609, 2, 1835023, 196609, 2, 1835022, 196609, 2, 1835021, 196609, 2, 1835020, 196609, 2, 1835019, 196609, 2, 1835018, 196609, 2, 1835017, 196609, 2, 1835016, 196609, 2, 1835015, 196609, 2, 1769476, 196609, 2, 1769475, 196609, 2, 1769474, 196609, 2, 1703937, 196609, 2, 1703938, 196609, 2, 1769477, 196609, 2, 1769478, 196609, 2, 1769479, 196609, 2, 1769480, 196609, 2, 1769481, 196609, 2, 1769482, 196609, 2, 1769483, 196609, 2, 1769484, 196609, 2, 1769485, 196609, 2, 1769486, 196609, 2, 1769487, 196609, 2, 1769488, 196609, 2, 1769489, 196609, 2, 1769490, 196609, 2, 1769491, 196609, 2, 1769492, 196609, 2, 1769493, 196609, 2, 1703957, 196609, 2, 1703958, 196609, 2, 1769494, 196609, 2, 1769495, 196609, 2, 1769496, 196609, 2, 1769497, 196609, 2, 1769498, 196609, 2, 1769499, 196609, 2, 1769500, 196609, 2, 1703962, 196609, 2, 1703961, 196609, 2, 1703960, 196609, 2, 1703959, 196609, 2, 1703956, 196609, 2, 1703955, 196609, 2, 1703954, 196609, 2, 1703953, 196609, 2, 1703952, 196609, 2, 1703951, 196609, 2, 1703950, 196609, 2, 1703949, 196609, 2, 1703948, 196609, 2, 1703947, 196609, 2, 1703946, 196609, 2, 1703945, 196609, 2, 1703944, 196609, 2, 1703943, 196609, 2, 1703942, 196609, 2, 1703941, 196609, 2, 1703940, 196609, 2, 1703939, 196609, 2, 1638402, 196609, 2, 1638401, 196609, 2, 1572865, 196609, 2, 1572866, 196609, 2, 1703963, 196609, 2, 1703964, 196609, 2, 1638428, 196609, 2, 1572892, 196609, 2, 1507356, 196609, 2, 1441820, 196609, 2, 1376284, 196609, 2, 1310748, 196609, 2, 1245212, 196609, 2, 1179676, 196609, 2, 1114140, 196609, 2, 1114139, 196609, 2, 1179675, 196609, 2, 1245211, 196609, 2, 1310747, 196609, 2, 1376283, 196609, 2, 1376282, 196609, 2, 1441818, 196609, 2, 1507354, 196609, 2, 1507355, 196609, 2, 1572891, 196609, 2, 1572890, 196609, 2, 1638426, 196609, 2, 1638425, 196609, 2, 1441819, 196609, 2, 1507353, 196609, 2, 1507352, 196609, 2, 1507351, 196609, 2, 1507350, 196609, 2, 1572885, 196609, 2, 1572884, 196609, 2, 1572883, 196609, 2, 1572882, 196609, 2, 1572881, 196609, 2, 1572880, 196609, 2, 1572879, 196609, 2, 1572886, 196609, 2, 1572887, 196609, 2, 1572888, 196609, 2, 1638414, 196609, 2, 1638415, 196609, 2, 1638416, 196609, 2, 1638417, 196609, 2, 1638418, 196609, 2, 1638419, 196609, 2, 1638420, 196609, 2, 1638421, 196609, 2, 1638422, 196609, 2, 1638423, 196609, 2, 1638424, 196609, 2, 1572889, 196609, 2, 1507349, 196609, 2, 1507348, 196609, 2, 1507347, 196609, 2, 1572878, 196609, 2, 1507346, 196609, 2, 1441812, 196609, 2, 1376277, 196609, 2, 1376276, 196609, 2, 1376275, 196609, 2, 1441810, 196609, 2, 1441809, 196609, 2, 1507344, 196609, 2, 1507343, 196609, 2, 1572877, 196609, 2, 1638412, 196609, 2, 1638411, 196609, 2, 1638413, 196609, 2, 1441813, 196609, 2, 1376278, 196609, 2, 1310743, 196609, 2, 1310742, 196609, 2, 1441811, 196609, 2, 1441814, 196609, 2, 1441815, 196609, 2, 1376280, 196609, 2, 1376281, 196609, 2, 1310746, 196609, 2, 1245210, 196609, 2, 1310745, 196609, 2, 1376279, 196609, 2, 1441816, 196609, 2, 1441817, 196609, 2, 1507342, 196609, 2, 1507341, 196609, 2, 1441808, 196609, 2, 1376273, 196609, 2, 1572876, 196609, 2, 1507345, 196609, 2, 1638410, 196609, 2, 1638409, 196609, 2, 1638408, 196609, 2, 1638407, 196609, 2, 1638406, 196609, 2, 1638405, 196609, 2, 1638404, 196609, 2, 1638403, 196609, 2, 1572867, 196609, 2, 1572868, 196609, 2, 1572869, 196609, 2, 1572870, 196609, 2, 1572871, 196609, 2, 1572872, 196609, 2, 1572873, 196609, 2, 1572874, 196609, 2, 1507339, 196609, 2, 1507340, 196609, 2, 1572875, 196609, 2, 1507333, 196609, 2, 1507332, 196609, 2, 1507331, 196609, 2, 1507330, 196609, 2, 1507329, 196609, 2, 1507334, 196609, 2, 1507335, 196609, 2, 1507336, 196609, 2, 1507337, 196609, 2, 1507338, 196609, 2, 1441804, 196609, 2, 1441803, 196609, 2, 1441802, 196609, 2, 1441801, 196609, 2, 1441800, 196609, 2, 1441799, 196609, 2, 1441793, 196609, 2, 1376257, 196609, 2, 1310721, 196609, 2, 1245185, 196609, 2, 1179649, 196609, 2, 1114113, 196609, 2, 1114114, 196609, 2, 1179650, 196609, 2, 1245186, 196609, 2, 1310722, 196609, 2, 1376258, 196609, 2, 1441795, 196609, 2, 1376259, 196609, 2, 1310723, 196609, 2, 1245187, 196609, 2, 1179651, 196609, 2, 1114115, 196609, 2, 1441794, 196609, 2, 1441796, 196609, 2, 1376260, 196609, 2, 1310724, 196609, 2, 1310725, 196609, 2, 1245189, 196609, 2, 1179653, 196609, 2, 1114117, 196609, 2, 1114116, 196609, 2, 1114118, 196609, 2, 1179652, 196609, 2, 1245188, 196609, 2, 1376261, 196609, 2, 1376262, 196609, 2, 1310726, 196609, 2, 1310727, 196609, 2, 1441797, 196609, 2, 1441798, 196609, 2, 1376264, 196609, 2, 1376263, 196609, 2, 1441806, 196609, 2, 1441807, 196609, 2, 1441805, 196609, 2, 1376274, 196609, 2, 1376268, 196609, 2, 1376269, 196609, 2, 1376270, 196609, 2, 1376271, 196609, 2, 1376272, 196609, 2, 1310737, 196609, 2, 1376267, 196609, 2, 1376266, 196609, 2, 1376265, 196609, 2, 1310731, 196609, 2, 1310732, 196609, 2, 1310733, 196609, 2, 1245190, 196609, 2, 1245191, 196609, 2, 1245192, 196609, 2, 1245193, 196609, 2, 1245194, 196609, 2, 1245195, 196609, 2, 1245196, 196609, 2, 1245197, 196609, 2, 1245198, 196609, 2, 1245199, 196609, 2, 1245200, 196609, 2, 1245201, 196609, 2, 1310734, 196609, 2, 1310730, 196609, 2, 1310729, 196609, 2, 1310728, 196609, 2, 1310735, 196609, 2, 1310736, 196609, 2, 1310738, 196609, 2, 1310739, 196609, 2, 1310740, 196609, 2, 1310741, 196609, 2, 1310744, 196609, 2, 1245209, 196609, 2, 1245208, 196609, 2, 1245207, 196609, 2, 1179674, 196609, 2, 1179673, 196609, 2, 1179672, 196609, 2, 1245206, 196609, 2, 1245205, 196609, 2, 1114138, 196609, 2, 1114137, 196609, 2, 1179671, 196609, 2, 1179670, 196609, 2, 1245204, 196609, 2, 1179669, 196609, 2, 1114135, 196609, 2, 1114136, 196609, 2, 1114134, 196609, 2, 1114133, 196609, 2, 1114132, 196609, 2, 1179667, 196609, 2, 1179666, 196609, 2, 1179665, 196609, 2, 1179668, 196609, 2, 1179664, 196609, 2, 1179663, 196609, 2, 1245202, 196609, 2, 1245203, 196609, 2, 1114131, 196609, 2, 1114130, 196609, 2, 1114129, 196609, 2, 1114128, 196609, 2, 1114127, 196609, 2, 1114126, 196609, 2, 1114125, 196609, 2, 1114124, 196609, 2, 1114123, 196609, 2, 1114122, 196609, 2, 1114121, 196609, 2, 1114120, 196609, 2, 1114119, 196609, 2, 1179655, 196609, 2, 1179656, 196609, 2, 1179657, 196609, 2, 1179658, 196609, 2, 1179659, 196609, 2, 1179660, 196609, 2, 1179661, 196609, 2, 1179654, 196609, 2, 1179662, 196609, 2)

[node name="PlayerModel" type="CharacterBody2D" parent="."]
position = Vector2(109, 920)
scale = Vector2(0.09, 0.09)
collision_mask = 3
script = SubResource("GDScript_381hh")

[node name="PlayerSprite" type="Sprite2D" parent="PlayerModel"]
position = Vector2(140, 950)
texture = ExtResource("3_5k8jm")
hframes = 5
vframes = 3

[node name="PlayerCollisionShape" type="CollisionShape2D" parent="PlayerModel"]
position = Vector2(140, 1027.5)
rotation = 1.5708
scale = Vector2(0.999999, 0.999999)
shape = SubResource("RectangleShape2D_uwm2o")

[node name="AnimationPlayer" type="AnimationPlayer" parent="PlayerModel"]
libraries = {
"": SubResource("AnimationLibrary_1fd5i")
}

[node name="Camera2D" type="Camera2D" parent="PlayerModel"]
position = Vector2(150, 1050)
scale = Vector2(5, 5)
zoom = Vector2(3, 3)
limit_left = 0
limit_top = 0
limit_right = 1900
limit_bottom = 1050
limit_smoothed = true
position_smoothing_enabled = true
editor_draw_limits = true
editor_draw_drag_margin = true

[node name="Level" type="TileMap" parent="."]
tile_set = SubResource("TileSet_jgi20")
format = 2
layer_0/tile_data = PackedInt32Array(2097152, 327681, 0, 2097153, 65537, 0, 2097154, 65537, 0, 2097155, 65537, 0, 2097156, 65537, 0, 2097157, 65537, 0, 2097158, 65537, 0, 2097159, 65537, 0, 2097160, 65537, 0, 2097161, 65537, 0, 2097162, 65537, 0, 2097163, 65537, 0, 2097164, 65537, 0, 2097165, 65537, 0, 2097166, 65537, 0, 2097167, 65537, 0, 2097168, 65537, 0, 2097169, 65537, 0, 2097170, 65537, 0, 2097171, 65537, 0, 2097172, 65537, 0, 2097173, 65537, 0, 2097174, 65537, 0, 2097175, 65537, 0, 2097176, 65537, 0, 2097177, 65537, 0, 2097178, 65537, 0, 2097179, 65537, 0, 2097180, 65537, 0, 2031645, 1, 1, 1966109, 1, 1, 1900573, 1, 1, 1835037, 1, 1, 1769501, 1, 1, 1703965, 1, 1, 1638429, 1, 1, 1572893, 1, 1, 1507357, 1, 1, 1441821, 1, 1, 1376285, 1, 1, 1310749, 1, 1, 1245213, 1, 1, 1179677, 1, 1, 1114141, 1, 1, 1048605, 1, 1, 2097181, 458753, 0, 2031616, 131073, 1, 1966080, 131073, 1, 1900544, 131073, 1, 1835008, 131073, 1, 1769472, 131073, 1, 1703936, 131073, 1, 1638400, 131073, 1, 1572864, 131073, 1, 1507328, 131073, 1, 1441792, 131073, 1, 1376256, 131073, 1, 1310720, 131073, 1, 1245184, 131073, 1, 1179648, 131073, 1, 1114112, 131073, 1, 1048577, 65537, 2, 1048578, 65537, 2, 1048579, 65537, 2, 1048580, 65537, 2, 1048581, 65537, 2, 1048576, 65537, 1, 1703953, 262145, 0, 1769489, 262145, 1, 1835025, 262145, 2, 1703950, 262145, 0, 1769486, 262145, 1, 1835022, 262145, 2, 2031629, 1, 0, 1966094, 1, 1, 2031630, 458753, 0)
