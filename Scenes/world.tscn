[gd_scene load_steps=7 format=4 uid="uid://da6grha0bpajn"]

[ext_resource type="Texture2D" uid="uid://82opar247kat" path="res://Assets/Tiles/platformertiles.png" id="1_a02cp"]

[sub_resource type="GDScript" id="GDScript_a02cp"]
script/source = "extends Node2D

var player_scene = preload(\"res://Scenes/player.tscn\")

func _ready():
	# Jeder spawnt zuerst seinen eigenen Spieler
	spawn_player(multiplayer.get_unique_id())
	
	if multiplayer.is_server():
		# Host spawnt alle bereits verbundenen Clients
		for peer_id in multiplayer.get_peers():
			spawn_player(peer_id)
			# Informiere den neuen Client über den Host
			spawn_player_on_client.rpc_id(peer_id, 1)  # Host-ID ist immer 1
	else:
		# Client fordert alle existierenden Spieler an
		request_players.rpc_id(1)  # An Host senden

	multiplayer.peer_connected.connect(_on_peer_connected)
	multiplayer.peer_disconnected.connect(_on_peer_disconnected)

@rpc(\"any_peer\", \"reliable\")
func request_players():
	if multiplayer.is_server():
		var sender_id = multiplayer.get_remote_sender_id()
		# Sende alle existierenden Spieler an den anfragenden Client
		for peer_id in multiplayer.get_peers():
			if peer_id != sender_id:  # Den eigenen Spieler nicht nochmal senden
				spawn_player_on_client.rpc_id(sender_id, peer_id)
		# Sende auch den Host-Spieler
		spawn_player_on_client.rpc_id(sender_id, 1)

func _on_peer_connected(peer_id):
	if multiplayer.is_server():
		# Spawne neuen Client für alle existierenden Spieler
		spawn_player(peer_id)
		# Informiere den neuen Client über alle existierenden Spieler
		for existing_id in multiplayer.get_peers():
			if existing_id != peer_id:
				spawn_player_on_client.rpc_id(peer_id, existing_id)
		# Informiere über den Host
		spawn_player_on_client.rpc_id(peer_id, 1)

func _on_peer_disconnected(peer_id):
	if has_node(str(peer_id)):
		get_node(str(peer_id)).queue_free()

@rpc(\"reliable\", \"call_remote\")
func spawn_player_on_client(peer_id):
	if not get_node_or_null(str(peer_id)):
		spawn_player(peer_id)

func spawn_player(peer_id):
	if get_node_or_null(str(peer_id)):
		return  # Spieler existiert bereits
	
	var player = player_scene.instantiate()
	player.name = str(peer_id)
	player.set_multiplayer_authority(peer_id)
	add_child(player)
	
	# Zufällige Spawn-Position
	var spawn_points = get_tree().get_nodes_in_group(\"spawn_points\")
	if spawn_points.size() > 0:
		player.global_position = spawn_points[randi() % spawn_points.size()].global_position
	else:
		player.global_position = Vector2(randf_range(100, 900), randf_range(100, 500))
"

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_go701"]
texture = ExtResource("1_a02cp")
texture_region_size = Vector2i(32, 32)
0:0/0 = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:0/0 = 0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:0/0 = 0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:0/0 = 0
4:0/0 = 0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
5:0/0 = 0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:0/0 = 0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:0/0 = 0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:1/0 = 0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:1/0 = 0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:1/0 = 0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:1/0 = 0
4:1/0 = 0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
5:1/0 = 0
6:1/0 = 0
7:1/0 = 0
0:2/0 = 0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:2/0 = 0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:2/0 = 0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:2/0 = 0
4:2/0 = 0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
5:2/0 = 0
6:2/0 = 0
7:2/0 = 0

[sub_resource type="TileSet" id="TileSet_5a7ea"]
tile_size = Vector2i(32, 32)
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_go701")

[sub_resource type="GDScript" id="GDScript_5a7ea"]
script/source = "extends Marker2D

func _ready():
	self.add_to_group(\"spawn_points\")
"

[sub_resource type="GDScript" id="GDScript_go701"]
script/source = "extends Marker2D

func _ready():
	self.add_to_group(\"spawn_points\")
"

[node name="world" type="Node2D"]
position = Vector2(689, 914)
script = SubResource("GDScript_a02cp")

[node name="wall" type="TileMapLayer" parent="."]
tile_map_data = PackedByteArray("AAD7/wIAAAABAAAAAAD8/wIAAAABAAAAAAD9/wIAAAABAAAAAAD+/wIAAAABAAAAAAD//wIAAAABAAAAAAAAAAIAAAABAAAAAAABAAIAAAABAAAAAAACAAIAAAABAAAAAAADAAIAAAABAAAAAAAEAAIAAAABAAAAAAAFAAIAAAABAAAAAAAGAAIAAAABAAAAAAAHAAIAAAABAAAAAAD6/wIAAAABAAAAAAD5/wIAAAABAAAAAAD4/wIAAAABAAAAAAD3/wIAAAABAAAAAAALAAIAAAABAAAAAAAMAAIAAAABAAAAAAANAAIAAAABAAAAAAAOAAIAAAABAAAAAAAPAAIAAAABAAAAAAAQAAIAAAABAAAAAAAKAAIAAAABAAAAAAAJAAIAAAABAAAAAAAIAAIAAAABAAAAAAA=")
tile_set = SubResource("TileSet_5a7ea")

[node name="spawn1" type="Marker2D" parent="."]
position = Vector2(-185, 30)
script = SubResource("GDScript_5a7ea")

[node name="spawn2" type="Marker2D" parent="."]
position = Vector2(112, 38)
script = SubResource("GDScript_go701")
