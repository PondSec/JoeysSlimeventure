[gd_scene load_steps=18 format=4 uid="uid://cmdh8rpdo8fb2"]

[ext_resource type="Texture2D" uid="uid://82opar247kat" path="res://Assets/Tiles/platformertiles.png" id="1_lx4yj"]
[ext_resource type="PackedScene" uid="uid://ccep15ieo6o6o" path="res://Scenes/torch.tscn" id="3_d07bp"]
[ext_resource type="Texture2D" uid="uid://cimvb1apxwlty" path="res://Assets/block.png" id="3_xdlxs"]
[ext_resource type="PackedScene" uid="uid://b6ublycstdj8n" path="res://Scenes/player.tscn" id="5_26h23"]
[ext_resource type="PackedScene" uid="uid://0hg2cyfd6vle" path="res://Scenes/gameover.tscn" id="6_80tl2"]
[ext_resource type="PackedScene" uid="uid://dqykudmd26o2q" path="res://Scenes/bat.tscn" id="6_u4atw"]
[ext_resource type="AudioStream" uid="uid://pj50q64fos0k" path="res://Assets/Sounds/little-slimex27s-adventure-151007.mp3" id="7_ua7os"]

[sub_resource type="GDScript" id="GDScript_tnlsk"]
resource_name = "Game"
script/source = "extends Node2D

# Variable für das Pause-Menü
var pause_menu : Node = null

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	# Lade das Pause-Menü, aber instanziiere es noch nicht
	pause_menu = load(\"res://Scenes/PauseMenu.tscn\").instantiate()

	# Füge das Pause-Menü zur Root-Node hinzu, aber mache es unsichtbar
	pause_menu.visible = false
	get_tree().root.add_child(pause_menu)  # Füge es zur Root-Node hinzu, um es im Vordergrund zu haben

	# Setze den Z-Index des Pause-Menüs, damit es im Vordergrund bleibt
	pause_menu.z_index = 100  # Ein hoher Wert stellt sicher, dass es im Vordergrund bleibt

	# Stelle sicher, dass das Spiel nicht sofort pausiert wird
	get_tree().paused = false  # Spiel nicht pausiert beim Start

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	# Überprüfe, ob die \"Pause\"-Aktion gedrückt wurde
	if Input.is_action_just_pressed(\"Pause\"):
		toggle_pause_menu()

# Funktion, um das Pause-Menü umzuschalten
func toggle_pause_menu() -> void:
	# Wenn das Pause-Menü unsichtbar ist, machen wir es sichtbar und pausieren das Spiel
	if not pause_menu.visible:
		pause_menu.visible = true
		get_tree().quit()
	else:
		pause_menu.visible = false
		get_tree().paused = false  # Setze das Spiel fort
"

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_83pvq"]
texture = ExtResource("1_lx4yj")
texture_region_size = Vector2i(32, 32)
3:2/0 = 0
1:0/0 = 0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:1/0 = 0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:1/0 = 0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:2/0 = 0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
2:0/0 = 0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:0/0 = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:1/0 = 0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:2/0 = 0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:2/0 = 0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:0/0 = 0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:1/0 = 0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:2/0 = 0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
5:0/0 = 0
5:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:0/0 = 0
6:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:0/0 = 0
7:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:2/0 = 0
7:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-11.5, -16, 9.5, -16, 9, -5.25, -8.75, -6.5)
6:1/0 = 0
5:1/0 = 0
5:2/0 = 0
6:2/0 = 0
7:1/0 = 0
3:1/0 = 0
3:0/0 = 0

[sub_resource type="TileSet" id="TileSet_jgi20"]
tile_size = Vector2i(32, 32)
physics_layer_0/collision_layer = 1
sources/1 = SubResource("TileSetAtlasSource_83pvq")

[sub_resource type="NavigationPolygon" id="NavigationPolygon_tk8gs"]
vertices = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])
outlines = Array[PackedVector2Array]([PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)])
agent_radius = 0.0

[sub_resource type="NavigationPolygon" id="NavigationPolygon_hgdh7"]
vertices = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])
outlines = Array[PackedVector2Array]([PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)])
agent_radius = 0.0

[sub_resource type="NavigationPolygon" id="NavigationPolygon_4tvx8"]
vertices = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])
outlines = Array[PackedVector2Array]([PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)])
agent_radius = 0.0

[sub_resource type="NavigationPolygon" id="NavigationPolygon_jhuvg"]
vertices = PackedVector2Array(8, 8, -8, 8, -8, -8, 8, -8)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])
outlines = Array[PackedVector2Array]([PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)])
agent_radius = 0.0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_5uy8r"]
texture = ExtResource("3_xdlxs")
0:0/0 = 0
0:0/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
1:0/0 = 0
1:0/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
2:0/0 = 0
2:0/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
3:0/0 = 0
3:0/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
4:0/0 = 0
4:0/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
5:0/0 = 0
5:0/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
6:0/0 = 0
6:0/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
0:1/0 = 0
0:1/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
1:1/0 = 0
1:1/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
2:1/0 = 0
2:1/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
3:1/0 = 0
3:1/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
4:1/0 = 0
4:1/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_4tvx8")
5:1/0 = 0
5:1/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
6:1/0 = 0
6:1/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
0:2/0 = 0
0:2/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
1:2/0 = 0
1:2/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
2:2/0 = 0
2:2/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
3:2/0 = 0
3:2/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
4:2/0 = 0
4:2/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_jhuvg")
5:2/0 = 0
5:2/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
6:2/0 = 0
6:2/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
0:3/0 = 0
0:3/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
1:3/0 = 0
1:3/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
2:3/0 = 0
2:3/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_hgdh7")
3:3/0 = 0
3:3/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
4:3/0 = 0
4:3/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
5:3/0 = 0
5:3/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
6:3/0 = 0
6:3/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
0:4/0 = 0
0:4/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
1:4/0 = 0
1:4/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
2:4/0 = 0
2:4/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
3:4/0 = 0
3:4/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
4:4/0 = 0
4:4/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
5:4/0 = 0
5:4/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
6:4/0 = 0
6:4/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
0:5/0 = 0
0:5/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
1:5/0 = 0
1:5/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
2:5/0 = 0
2:5/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
3:5/0 = 0
3:5/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
4:5/0 = 0
4:5/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
5:5/0 = 0
5:5/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
6:5/0 = 0
6:5/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
0:6/0 = 0
0:6/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
1:6/0 = 0
1:6/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
2:6/0 = 0
2:6/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
3:6/0 = 0
3:6/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
4:6/0 = 0
4:6/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
5:6/0 = 0
5:6/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")
6:6/0 = 0
6:6/0/navigation_layer_0/polygon = SubResource("NavigationPolygon_tk8gs")

[sub_resource type="TileSet" id="TileSet_nhier"]
navigation_layer_0/layers = 1
sources/0 = SubResource("TileSetAtlasSource_5uy8r")

[sub_resource type="GDScript" id="GDScript_rsvrr"]
resource_name = "bat_spawner"
script/source = "extends TileMapLayer

# Variablen für das Spawning
const RESPAWN_TIME = 30.0  # Zeit, nach der die Fledermaus respawnt
const BAT_SCENE = preload(\"res://Scenes/bat.tscn\")  # Szene für die Fledermaus

var bat_1 = null
var bat_2 = null

# Liste der möglichen Spawn-Positionen im TileMap
var spawn_positions: Array = []

@onready var tilemap = get_node(\"TileMap\")  # Hole die TileMap, die im gleichen Node ist

func _ready():
    # Initialisiere die Liste der möglichen Spawn-Positionen basierend auf der TileMap
    get_spawn_positions()

    # Spawne zu Beginn zwei Fledermäuse
    spawn_bats()

# Methode zum Abrufen aller möglichen Spawn-Positionen
func get_spawn_positions():
    spawn_positions.clear()  # Leere die Liste der Spawn-Positionen

    # Iteriere durch alle Tiles im TileMap und prüfe, welche gültige Positionen sind
    for x in range(tilemap.get_used_rect().size.x):
        for y in range(tilemap.get_used_rect().size.y):
            var tile = tilemap.get_cell(x, y)  # Hole den Zellwert aus der TileMap
            if tile != -1:  # Wenn die Tile ID nicht -1 ist (nicht leer)
                var world_position = tilemap.map_to_world(Vector2(x, y))
                spawn_positions.append(world_position)  # Füge gültige Position zur Liste hinzu

# Methode zum Spawnen der Fledermäuse
func spawn_bats():
    if spawn_positions.size() == 0:
        print(\"No valid spawn positions found.\")
        return

    # Wähle zufällig zwei Positionen aus der Liste der möglichen Spawn-Positionen
    var random_position_1 = spawn_positions[randi() % spawn_positions.size()]
    var random_position_2 = spawn_positions[randi() % spawn_positions.size()]

    # Stelle sicher, dass es nicht dieselbe Position ist
    while random_position_1 == random_position_2:
        random_position_2 = spawn_positions[randi() % spawn_positions.size()]

    # Erstelle die beiden Fledermaus-Instanzen
    bat_1 = BAT_SCENE.instantiate()  # Fledermaus 1
    bat_2 = BAT_SCENE.instantiate()  # Fledermaus 2

    # Füge sie der Szene hinzu
    get_tree().current_scene.add_child(bat_1)
    get_tree().current_scene.add_child(bat_2)

    # Setze ihre Positionen
    bat_1.global_position = random_position_1
    bat_2.global_position = random_position_2

    # Optional: Weise der Fledermaus den Spieler zu, falls notwendig
    var player = get_node(\"/root/Game/PlayerModel\")  # Beispiel: Pfad zum Spieler
    bat_1.player = player
    bat_2.player = player

# Methode, um die Fledermaus nach einer bestimmten Zeit wieder zu spawnen
func respawn_bat_after_death(bat_to_respawn: Node):
    await get_tree().create_timer(RESPAWN_TIME).timeout  # Warte die respawn-Zeit ab

    # Wähle eine zufällige Position für die Fledermaus
    var random_position = spawn_positions[randi() % spawn_positions.size()]

    # Setze die neue Position der Fledermaus
    bat_to_respawn.global_position = random_position
    bat_to_respawn.show()  # Stelle sicher, dass sie sichtbar ist
    print(\"Bat respawned at: \", random_position)
"

[node name="Game" type="Node2D"]
script = SubResource("GDScript_tnlsk")

[node name="Background" type="TileMap" parent="."]
tile_set = SubResource("TileSet_jgi20")
collision_animatable = true
format = 2
layer_0/tile_data = PackedInt32Array(2097152, 196609, 2, 2097153, 196609, 2, 2097154, 196609, 2, 2097155, 196609, 2, 2097156, 196609, 2, 2097157, 196609, 2, 2097158, 196609, 2, 2097159, 196609, 2, 2097160, 196609, 2, 2097161, 196609, 2, 2097162, 196609, 2, 2097163, 196609, 2, 2097164, 196609, 2, 2097165, 196609, 2, 2097166, 196609, 2, 2031630, 196609, 2, 2031631, 196609, 2, 2031632, 196609, 2, 2031633, 196609, 2, 2031634, 196609, 2, 2097167, 196609, 2, 2097168, 196609, 2, 2097169, 196609, 2, 2097170, 196609, 2, 2097171, 196609, 2, 2097172, 196609, 2, 1638427, 196609, 2, 2097173, 196609, 2, 2097174, 196609, 2, 2097175, 196609, 2, 2097176, 196609, 2, 2097177, 196609, 2, 2097178, 196609, 2, 2097179, 196609, 2, 2097180, 196609, 2, 2097181, 196609, 2, 2031645, 196609, 2, 1966109, 196609, 2, 1900573, 196609, 2, 1835037, 196609, 2, 1769501, 196609, 2, 1703965, 196609, 2, 1638429, 196609, 2, 1572893, 196609, 2, 1507357, 196609, 2, 1441821, 196609, 2, 1376285, 196609, 2, 1310749, 196609, 2, 1245213, 196609, 2, 1179677, 196609, 2, 1114141, 196609, 2, 1048605, 196609, 2, 1048604, 196609, 2, 1048603, 196609, 2, 1048602, 196609, 2, 1048601, 196609, 2, 1048600, 196609, 2, 1048599, 196609, 2, 1048598, 196609, 2, 1048597, 196609, 2, 1048596, 196609, 2, 1048595, 196609, 2, 1048594, 196609, 2, 1048593, 196609, 2, 1048592, 196609, 2, 1048591, 196609, 2, 1048590, 196609, 2, 1048589, 196609, 2, 1048588, 196609, 2, 1048587, 196609, 2, 1048586, 196609, 2, 1048585, 196609, 2, 1048584, 196609, 2, 1048583, 196609, 2, 1048582, 196609, 2, 1048581, 196609, 2, 1048580, 196609, 2, 1048579, 196609, 2, 1048578, 196609, 2, 1048577, 196609, 2, 1048576, 196609, 2, 1114112, 196609, 2, 1179648, 196609, 2, 1245184, 196609, 2, 1310720, 196609, 2, 1376256, 196609, 2, 1638400, 196609, 2, 1703936, 196609, 2, 1572864, 196609, 2, 1507328, 196609, 2, 1441792, 196609, 2, 1769472, 196609, 2, 1835008, 196609, 2, 1900544, 196609, 2, 1966080, 196609, 2, 2031616, 196609, 2, 2031617, 196609, 2, 2031618, 196609, 2, 2031619, 196609, 2, 2031620, 196609, 2, 2031621, 196609, 2, 2031622, 196609, 2, 2031623, 196609, 2, 2031624, 196609, 2, 2031625, 196609, 2, 2031626, 196609, 2, 2031627, 196609, 2, 2031628, 196609, 2, 2031629, 196609, 2, 2031635, 196609, 2, 2031636, 196609, 2, 2031637, 196609, 2, 2031638, 196609, 2, 2031639, 196609, 2, 2031640, 196609, 2, 2031641, 196609, 2, 2031642, 196609, 2, 2031643, 196609, 2, 2031644, 196609, 2, 1966108, 196609, 2, 1900572, 196609, 2, 1966107, 196609, 2, 1966106, 196609, 2, 1966105, 196609, 2, 1966104, 196609, 2, 1966103, 196609, 2, 1966102, 196609, 2, 1966101, 196609, 2, 1966100, 196609, 2, 1966099, 196609, 2, 1966098, 196609, 2, 1966097, 196609, 2, 1966096, 196609, 2, 1966095, 196609, 2, 1966094, 196609, 2, 1966093, 196609, 2, 1966092, 196609, 2, 1966091, 196609, 2, 1966090, 196609, 2, 1966089, 196609, 2, 1966088, 196609, 2, 1966086, 196609, 2, 1966085, 196609, 2, 1966084, 196609, 2, 1900547, 196609, 2, 1900546, 196609, 2, 1900545, 196609, 2, 1835010, 196609, 2, 1966082, 196609, 2, 1966081, 196609, 2, 1966083, 196609, 2, 1900548, 196609, 2, 1835011, 196609, 2, 1835009, 196609, 2, 1769473, 196609, 2, 1835012, 196609, 2, 1835013, 196609, 2, 1835014, 196609, 2, 1900549, 196609, 2, 1900550, 196609, 2, 1900551, 196609, 2, 1900552, 196609, 2, 1900553, 196609, 2, 1900554, 196609, 2, 1900555, 196609, 2, 1900556, 196609, 2, 1900557, 196609, 2, 1900558, 196609, 2, 1900559, 196609, 2, 1900560, 196609, 2, 1900561, 196609, 2, 1900562, 196609, 2, 1835027, 196609, 2, 1835028, 196609, 2, 1835029, 196609, 2, 1835030, 196609, 2, 1835031, 196609, 2, 1835032, 196609, 2, 1900568, 196609, 2, 1900569, 196609, 2, 1900570, 196609, 2, 1900571, 196609, 2, 1900567, 196609, 2, 1900566, 196609, 2, 1900565, 196609, 2, 1900564, 196609, 2, 1900563, 327681, 1, 1835033, 196609, 2, 1835034, 196609, 2, 1835035, 196609, 2, 1835036, 196609, 2, 1835026, 327681, 1, 1835025, 196609, 2, 1835024, 196609, 2, 1835023, 196609, 2, 1835022, 196609, 2, 1835021, 196609, 2, 1835020, 196609, 2, 1835019, 196609, 2, 1835018, 196609, 2, 1835017, 196609, 2, 1835016, 196609, 2, 1835015, 196609, 2, 1769476, 196609, 2, 1769475, 196609, 2, 1769474, 196609, 2, 1703937, 196609, 2, 1703938, 196609, 2, 1769477, 196609, 2, 1769478, 196609, 2, 1769479, 196609, 2, 1769480, 196609, 2, 1769481, 196609, 2, 1769482, 196609, 2, 1769483, 196609, 2, 1769484, 196609, 2, 1769485, 196609, 2, 1769486, 196609, 2, 1769487, 196609, 2, 1769488, 196609, 2, 1769489, 196609, 2, 1769490, 196609, 2, 1769491, 196609, 2, 1769492, 196609, 2, 1769493, 196609, 2, 1703957, 196609, 2, 1703958, 196609, 2, 1769494, 196609, 2, 1769495, 196609, 2, 1769496, 196609, 2, 1769497, 196609, 2, 1769498, 196609, 2, 1769499, 196609, 2, 1769500, 196609, 2, 1703962, 196609, 2, 1703961, 196609, 2, 1703960, 196609, 2, 1703959, 196609, 2, 1703956, 196609, 2, 1703955, 196609, 2, 1703954, 196609, 2, 1703953, 196609, 2, 1703952, 196609, 2, 1703951, 196609, 2, 1703950, 196609, 2, 1703949, 196609, 2, 1703948, 196609, 2, 1703947, 196609, 2, 1703946, 196609, 2, 1703945, 196609, 2, 1703944, 196609, 2, 1703943, 196609, 2, 1703942, 196609, 2, 1703941, 196609, 2, 1703940, 196609, 2, 1703939, 196609, 2, 1638402, 196609, 2, 1638401, 196609, 2, 1572865, 196609, 2, 1572866, 196609, 2, 1703963, 196609, 2, 1703964, 196609, 2, 1638428, 196609, 2, 1572892, 196609, 2, 1507356, 196609, 2, 1441820, 196609, 2, 1376284, 196609, 2, 1310748, 196609, 2, 1245212, 196609, 2, 1179676, 196609, 2, 1114140, 196609, 2, 1114139, 196609, 2, 1179675, 196609, 2, 1245211, 196609, 2, 1310747, 196609, 2, 1376283, 196609, 2, 1376282, 196609, 2, 1441818, 196609, 2, 1507354, 196609, 2, 1507355, 196609, 2, 1572891, 196609, 2, 1572890, 196609, 2, 1638426, 196609, 2, 1638425, 196609, 2, 1441819, 196609, 2, 1507353, 196609, 2, 1507352, 196609, 2, 1507351, 196609, 2, 1507350, 196609, 2, 1572885, 196609, 2, 1572884, 196609, 2, 1572883, 196609, 2, 1572882, 196609, 2, 1572881, 196609, 2, 1572880, 196609, 2, 1572879, 196609, 2, 1572886, 196609, 2, 1572887, 196609, 2, 1572888, 196609, 2, 1638414, 196609, 2, 1638415, 196609, 2, 1638416, 196609, 2, 1638417, 196609, 2, 1638418, 196609, 2, 1638419, 196609, 2, 1638420, 196609, 2, 1638421, 196609, 2, 1638422, 196609, 2, 1638423, 196609, 2, 1638424, 196609, 2, 1572889, 196609, 2, 1507349, 196609, 2, 1507348, 196609, 2, 1507347, 196609, 2, 1572878, 196609, 2, 1507346, 196609, 2, 1441812, 196609, 2, 1376277, 196609, 2, 1376276, 196609, 2, 1376275, 196609, 2, 1441810, 196609, 2, 1441809, 196609, 2, 1507344, 196609, 2, 1507343, 196609, 2, 1572877, 196609, 2, 1638412, 196609, 2, 1638411, 196609, 2, 1638413, 196609, 2, 1441813, 196609, 2, 1376278, 196609, 2, 1310743, 196609, 2, 1310742, 196609, 2, 1441811, 196609, 2, 1441814, 196609, 2, 1441815, 196609, 2, 1376280, 196609, 2, 1376281, 196609, 2, 1310746, 196609, 2, 1245210, 196609, 2, 1310745, 196609, 2, 1376279, 196609, 2, 1441816, 196609, 2, 1441817, 196609, 2, 1507342, 196609, 2, 1507341, 196609, 2, 1441808, 196609, 2, 1376273, 196609, 2, 1572876, 196609, 2, 1507345, 196609, 2, 1638410, 196609, 2, 1638409, 196609, 2, 1638408, 196609, 2, 1638407, 196609, 2, 1638406, 196609, 2, 1638405, 196609, 2, 1638404, 196609, 2, 1638403, 196609, 2, 1572867, 196609, 2, 1572868, 196609, 2, 1572869, 196609, 2, 1572870, 196609, 2, 1572871, 196609, 2, 1572872, 196609, 2, 1572873, 196609, 2, 1572874, 196609, 2, 1507339, 196609, 2, 1507340, 196609, 2, 1572875, 196609, 2, 1507333, 196609, 2, 1507332, 196609, 2, 1507331, 196609, 2, 1507330, 196609, 2, 1507329, 196609, 2, 1507334, 196609, 2, 1507335, 196609, 2, 1507336, 196609, 2, 1507337, 196609, 2, 1507338, 196609, 2, 1441804, 196609, 2, 1441803, 196609, 2, 1441802, 196609, 2, 1441801, 196609, 2, 1441800, 196609, 2, 1441799, 196609, 2, 1441793, 196609, 2, 1376257, 196609, 2, 1310721, 196609, 2, 1245185, 196609, 2, 1179649, 196609, 2, 1114113, 196609, 2, 1114114, 196609, 2, 1179650, 196609, 2, 1245186, 196609, 2, 1310722, 196609, 2, 1376258, 196609, 2, 1441795, 196609, 2, 1376259, 196609, 2, 1310723, 196609, 2, 1245187, 196609, 2, 1179651, 196609, 2, 1114115, 196609, 2, 1441794, 196609, 2, 1441796, 196609, 2, 1376260, 196609, 2, 1310724, 196609, 2, 1310725, 196609, 2, 1245189, 196609, 2, 1179653, 196609, 2, 1114117, 196609, 2, 1114116, 196609, 2, 1114118, 196609, 2, 1179652, 196609, 2, 1245188, 196609, 2, 1376261, 196609, 2, 1376262, 196609, 2, 1310726, 196609, 2, 1310727, 196609, 2, 1441797, 196609, 2, 1441798, 196609, 2, 1376264, 65537, 1, 1376263, 196609, 2, 1441806, 196609, 2, 1441807, 196609, 2, 1441805, 196609, 2, 1376274, 196609, 2, 1376268, 196609, 2, 1376269, 196609, 2, 1376270, 196609, 2, 1376271, 196609, 2, 1376272, 196609, 2, 1310737, 196609, 2, 1376267, 196609, 2, 1376266, 196609, 2, 1376265, 65537, 1, 1310731, 196609, 2, 1310732, 196609, 2, 1310733, 196609, 2, 1245190, 196609, 2, 1245191, 196609, 2, 1245195, 196609, 2, 1245196, 196609, 2, 1245197, 196609, 2, 1245198, 196609, 2, 1245199, 196609, 2, 1245200, 196609, 2, 1245201, 196609, 2, 1310734, 196609, 2, 1310735, 196609, 2, 1310736, 196609, 2, 1310738, 196609, 2, 1310739, 196609, 2, 1310740, 196609, 2, 1310741, 196609, 2, 1310744, 196609, 2, 1245209, 196609, 2, 1245208, 196609, 2, 1245207, 196609, 2, 1179674, 196609, 2, 1179673, 196609, 2, 1179672, 196609, 2, 1245206, 196609, 2, 1245205, 196609, 2, 1114138, 196609, 2, 1114137, 196609, 2, 1179671, 196609, 2, 1179670, 196609, 2, 1245204, 196609, 2, 1179669, 196609, 2, 1114135, 196609, 2, 1114136, 196609, 2, 1114134, 196609, 2, 1114133, 196609, 2, 1114132, 196609, 2, 1179667, 196609, 2, 1179666, 196609, 2, 1179665, 196609, 2, 1179668, 196609, 2, 1179664, 196609, 2, 1179663, 196609, 2, 1245202, 196609, 2, 1245203, 196609, 2, 1114131, 196609, 2, 1114130, 196609, 2, 1114129, 196609, 2, 1114128, 196609, 2, 1114127, 196609, 2, 1114126, 196609, 2, 1114125, 196609, 2, 1114124, 196609, 2, 1114123, 196609, 2, 1114122, 196609, 2, 1114121, 196609, 2, 1114120, 196609, 2, 1114119, 196609, 2, 1179655, 196609, 2, 1179656, 196609, 2, 1179657, 196609, 2, 1179658, 196609, 2, 1179659, 196609, 2, 1179660, 196609, 2, 1179661, 196609, 2, 1179654, 196609, 2, 1179662, 196609, 2, 1966087, 196609, 2)

[node name="LightSystem" type="Node2D" parent="Background"]

[node name="Torch" parent="Background/LightSystem" instance=ExtResource("3_d07bp")]
position = Vector2(283, 997)

[node name="Torch2" parent="Background/LightSystem" instance=ExtResource("3_d07bp")]
position = Vector2(499, 970)

[node name="Torch3" parent="Background/LightSystem" instance=ExtResource("3_d07bp")]
position = Vector2(145, 874)

[node name="Torch4" parent="Background/LightSystem" instance=ExtResource("3_d07bp")]
position = Vector2(835, 828)

[node name="Shadow" type="CanvasModulate" parent="Background/LightSystem"]
modulate = Color(0, 0, 0, 1)
self_modulate = Color(0, 0, 0, 1)
position = Vector2(-14, 10)
color = Color(0, 0, 0, 1)

[node name="NavigationPath" type="TileMapLayer" parent="."]
visible = false
tile_map_data = PackedByteArray("")
tile_set = SubResource("TileSet_nhier")
script = SubResource("GDScript_rsvrr")

[node name="Level" type="TileMap" parent="."]
position = Vector2(-14, 10)
tile_set = SubResource("TileSet_jgi20")
format = 2
layer_0/tile_data = PackedInt32Array(2097152, 327681, 0, 2097153, 65537, 0, 2097154, 65537, 0, 2097155, 65537, 0, 2097156, 65537, 0, 2097157, 65537, 0, 2097158, 65537, 0, 2097159, 65537, 0, 2097160, 65537, 0, 2097161, 65537, 0, 2097162, 65537, 0, 2097163, 65537, 0, 2097164, 65537, 0, 2097165, 458753, 0, 2097166, 65537, 1, 2097167, 65537, 1, 2097168, 65537, 1, 2097169, 65537, 1, 2097176, 65537, 0, 2097177, 65537, 0, 2097178, 65537, 0, 2097179, 65537, 0, 2097180, 65537, 0, 2031645, 1, 1, 1966109, 1, 1, 1900573, 1, 1, 1835037, 1, 1, 1769501, 1, 1, 1703965, 1, 1, 1638429, 1, 1, 1572893, 1, 1, 1507357, 1, 1, 1441821, 1, 1, 1376285, 1, 1, 1310749, 1, 1, 1245213, 1, 1, 1179677, 1, 1, 1114141, 1, 1, 2097181, 458753, 0, 2031616, 131073, 1, 1966080, 131073, 1, 1900544, 131073, 1, 1835008, 131073, 1, 1769472, 131073, 1, 1703936, 131073, 1, 1638400, 131073, 1, 1572864, 131073, 1, 1507328, 131073, 1, 1441792, 131073, 1, 1376256, 131073, 1, 1310720, 131073, 1, 1245184, 131073, 1, 1179648, 131073, 1, 1114112, 131073, 1, 1048577, 65537, 2, 1048578, 65537, 2, 1048579, 65537, 2, 1048580, 65537, 2, 1048581, 65537, 2, 1048576, 65537, 1, 1703950, 262145, 1, 1769486, 262145, 1, 1835022, 262145, 2, 2031629, 1, 0, 2031630, 65537, 0, 2031631, 65537, 0, 2031632, 65537, 0, 2031633, 458753, 0, 2031621, 327681, 2, 2031622, 327681, 2, 2031623, 327681, 2, 2031624, 393217, 2, 1900549, 65537, 2, 1900548, 65537, 2, 1900547, 1, 2, 1900550, 131073, 2, 1835014, 131073, 0, 1835011, 1, 0, 1835012, 65537, 0, 1966083, 458753, 2, 2031617, 327681, 2, 2031618, 327681, 2, 2031619, 327681, 2, 2031626, 327681, 2, 2031627, 327681, 2, 2031628, 327681, 2, 2162688, 196609, 1, 2162689, 196609, 1, 2162690, 196609, 1, 2162691, 196609, 1, 2162692, 196609, 1, 2162693, 196609, 1, 2162694, 196609, 1, 2162695, 196609, 1, 2162696, 196609, 1, 2162697, 196609, 1, 2162698, 196609, 1, 2162699, 196609, 1, 2162700, 196609, 1, 2162701, 196609, 1, 2162702, 196609, 1, 2162703, 196609, 1, 2162704, 196609, 1, 2162705, 196609, 1, 2162706, 196609, 1, 2162707, 196609, 1, 2162708, 196609, 1, 2162709, 196609, 1, 2162710, 196609, 1, 2162711, 196609, 1, 2162712, 196609, 1, 2162713, 196609, 1, 2162714, 196609, 1, 2162715, 196609, 1, 2162716, 196609, 1, 2162717, 196609, 1, 2162718, 196609, 1, 2097182, 196609, 1, 2031646, 196609, 1, 1966110, 196609, 1, 1900574, 196609, 1, 1835038, 196609, 1, 1769502, 196609, 1, 1703966, 196609, 1, 1638430, 196609, 1, 1572894, 196609, 1, 1507358, 196609, 1, 1441822, 196609, 1, 1376286, 196609, 1, 1310750, 196609, 1, 1245214, 196609, 1, 1179678, 196609, 1, 1114142, 196609, 1, 1048606, 196609, 1, 983070, 196609, 1, 983069, 196609, 1, 983068, 196609, 1, 983067, 196609, 1, 983066, 196609, 1, 983065, 196609, 1, 983064, 196609, 1, 983063, 196609, 1, 983062, 196609, 1, 983061, 196609, 1, 983060, 196609, 1, 983059, 196609, 1, 983058, 196609, 1, 983057, 196609, 1, 983056, 196609, 1, 983055, 196609, 1, 983054, 196609, 1, 983053, 196609, 1, 983052, 196609, 1, 983051, 196609, 1, 983050, 196609, 1, 983049, 196609, 1, 983048, 196609, 1, 983047, 196609, 1, 983046, 196609, 1, 983045, 196609, 1, 983044, 196609, 1, 983043, 196609, 1, 983042, 196609, 1, 983041, 196609, 1, 983040, 196609, 1, 1048575, 196609, 1, 1114111, 196609, 1, 1179647, 196609, 1, 1245183, 196609, 1, 1310719, 196609, 1, 1376255, 196609, 1, 1441791, 196609, 1, 1507327, 196609, 1, 1572863, 196609, 1, 1638399, 196609, 1, 1703935, 196609, 1, 1769471, 196609, 1, 1835007, 196609, 1, 1900543, 196609, 1, 1966079, 196609, 1, 2031615, 196609, 1, 2097151, 196609, 1, 2162687, 196609, 1, 2228223, 196609, 1, 1048582, 65537, 2, 1048589, 65537, 2, 1048591, 65537, 2, 1048592, 65537, 2, 1048593, 65537, 2, 1048594, 65537, 2, 1048595, 65537, 2, 1048596, 65537, 2, 1048597, 65537, 2, 1048598, 65537, 2, 1048599, 65537, 2, 1048600, 65537, 2, 1048601, 65537, 2, 1048602, 65537, 2, 1048603, 65537, 2, 1048604, 65537, 2, 1835025, 1, 1, 1900561, 1, 1, 1966097, 1, 1, 1769489, 1, 1, 1769490, 65537, 1, 1769495, 131073, 1, 1835031, 131073, 1, 1900567, 131073, 1, 1966103, 131073, 1, 2031639, 131073, 1, 2097175, 327681, 0, 2097170, 65537, 1, 2097171, 65537, 1, 2097172, 65537, 1, 2097173, 65537, 1, 2097174, 65537, 1, 1769491, 65537, 1, 1769492, 65537, 1, 1769493, 65537, 1, 1769494, 65537, 1, 1900562, 65537, 1, 1966098, 65537, 1, 2031634, 65537, 1, 1835027, 65537, 1, 1900563, 65537, 1, 1966099, 65537, 1, 2031635, 65537, 1, 1835028, 65537, 1, 1900564, 65537, 1, 1966100, 65537, 1, 2031636, 65537, 1, 1835029, 65537, 1, 1900565, 65537, 1, 1966101, 65537, 1, 2031637, 65537, 1, 1835030, 65537, 1, 1900566, 65537, 1, 1966102, 65537, 1, 2031638, 65537, 1, 1835026, 65537, 1, 2031640, 327681, 2, 2031642, 327681, 2, 2031643, 327681, 2, 2031644, 327681, 2, 1966095, 327681, 2, 1966096, 327681, 2, 1966094, 393217, 2, 1900558, 458753, 2, 1638414, 262145, 1, 1507342, 262145, 1, 1441806, 262145, 1, 1507345, 1, 1, 1572881, 1, 1, 1638417, 1, 1, 1703953, 1, 1, 1441809, 1, 0, 1441810, 65537, 0, 1441811, 65537, 0, 1441812, 65537, 0, 1507346, 65537, 1, 1572882, 65537, 1, 1638418, 65537, 1, 1703954, 65537, 1, 1507347, 65537, 1, 1572883, 65537, 1, 1638419, 65537, 1, 1703955, 65537, 1, 1507348, 65537, 1, 1572884, 65537, 1, 1638420, 65537, 1, 1703956, 65537, 1, 1703958, 65537, 0, 1703957, 327681, 0, 1703959, 131073, 0, 1507349, 131073, 1, 1572885, 131073, 1, 1638421, 131073, 1, 1441813, 131073, 0, 1376274, 327681, 2, 1376276, 327681, 2, 1376275, 393217, 2, 1638422, 393217, 2, 1900570, 262145, 2, 1835034, 262145, 1, 1769498, 262145, 0, 1441818, 262145, 1, 1507354, 262145, 2, 1376282, 262145, 0, 1376270, 262145, 1, 1310734, 262145, 1, 1966086, 458753, 2, 1966085, 458753, 2, 1572872, 65537, 0, 1572873, 65537, 0, 1572874, 65537, 0, 1572876, 131073, 0, 1572878, 262145, 1, 1572871, 1, 0, 1638407, 1, 2, 1638412, 131073, 2, 1638409, 65537, 2, 1638410, 65537, 2, 1638408, 65537, 2, 1376263, 1, 2, 1376264, 65537, 2, 1376265, 65537, 2, 1376266, 65537, 2, 1376267, 65537, 2, 1245191, 1, 1, 1310727, 1, 1, 1179660, 131073, 0, 1048583, 65537, 2, 1048584, 65537, 2, 1048585, 65537, 2, 1048586, 65537, 2, 1048587, 65537, 2, 1048588, 65537, 2, 1179656, 65537, 0, 1179655, 1, 0, 1179657, 65537, 0, 1179658, 65537, 0, 1179659, 65537, 0, 1245192, 65537, 1, 1310728, 65537, 1, 1245194, 65537, 1, 1245195, 65537, 1, 1310731, 65537, 1, 1376268, 131073, 2, 1310732, 131073, 1, 1245196, 131073, 1, 1245193, 65537, 1, 1310729, 65537, 1, 1310730, 65537, 1, 1441800, 393217, 1, 1441803, 458753, 1, 1507340, 327681, 2, 1441802, 458753, 1, 1441804, 393217, 1, 1441801, 458753, 2, 1507335, 327681, 2, 1507338, 327681, 2, 1507339, 327681, 2, 1507337, 393217, 2, 1769478, 393217, 2, 1835013, 65537, 0, 1769476, 393217, 2, 1179662, 262145, 1, 1245198, 262145, 1, 1114126, 262145, 0, 1048590, 65537, 2, 1835032, 458753, 1, 1703962, 393217, 1, 1441816, 393217, 1, 1245206, 327681, 1, 1703952, 458753, 1, 1835023, 458753, 1, 1769487, 393217, 1, 1441808, 327681, 1, 1114121, 458753, 2, 1114125, 458753, 2, 1114135, 458753, 2, 1114138, 458753, 2, 1572875, 65537, 0, 1638411, 65537, 2, 1769481, 393217, 1, 1703940, 458753, 1, 1769477, 458753, 1, 1900552, 458753, 1, 1966093, 458753, 1, 1703949, 393217, 1, 1638406, 327681, 1, 1966084, 327681, 1, 1966091, 458753, 1, 2031625, 393217, 1, 1900546, 393217, 1, 1835009, 393217, 1, 1900545, 393217, 1, 1835010, 393217, 1, 1900556, 458753, 1, 1835018, 458753, 1, 1769483, 458753, 1, 1507332, 458753, 1, 1441794, 458753, 1, 1376261, 458753, 1, 1310724, 458753, 1, 1245202, 458753, 1, 1179664, 458753, 1, 1179661, 458753, 1, 1114122, 458753, 1, 1114119, 393217, 1, 1572886, 393217, 1, 1572888, 458753, 1, 2031641, 327681, 2, 1966106, 458753, 2, 1966107, 458753, 1, 1572890, 458753, 2)

[node name="PlayerModel" parent="." instance=ExtResource("5_26h23")]
position = Vector2(271, 769)

[node name="GameOverScreen" parent="." instance=ExtResource("6_80tl2")]
visible = false

[node name="Bat" parent="." node_paths=PackedStringArray("player") instance=ExtResource("6_u4atw")]
position = Vector2(880, 1004)
scale = Vector2(2, 2)
player = NodePath("../PlayerModel")

[node name="Bat2" parent="." node_paths=PackedStringArray("player") instance=ExtResource("6_u4atw")]
position = Vector2(127, 1005)
scale = Vector2(2, 2)
player = NodePath("../PlayerModel")

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("7_ua7os")
autoplay = true
parameters/looping = true
